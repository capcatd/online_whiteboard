version: "3"

services:
  api:
    build: ./backend/api
    restart: always
    ports:
      - ${API_PORT-8000}:${API_PORT-8000}
    volumes:
      - ./backend/api:/app
    working_dir: /app
    environment:
      - DB_URL=postgresql+psycopg2://${DB_USER-user}:${DB_PASSWORD-password}@db:${DB_PORT-5432}/${DB_NAME-db}
      - FLASK_ENV=production
      - FLASK_PORT=${API_PORT-8000}
      - FLASK_SECRET_KEY=${API_SECRET_KEY}
    depends_on:
      - db
    links:
      - db
  websocket:
    build: ./backend/websocket
    restart: always
    command: python3 server.py
    ports:
      - ${WS_PORT-8001}:${WS_PORT-8001}
    volumes:
      - ./backend/websocket:/app
    working_dir: /app
  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT-8080}:${ADMINER_PORT-8080}
    depends_on:
      - db
  db:
    image: postgres:12.4
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME-db}
      - POSTGRES_USER=${DB_USER-user}
      - POSTGRES_PASSWORD=${DB_PASSWORD-password}
    volumes:
      - ./postgresql:/var/lib/postgresql
    ports:
      - ${DB_PORT-5432}:${DB_PORT-5432}
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
      args:
        FRONTEND_PORT: ${FRONTEND_PORT-80}
        API_URL: ${API_URL-http://192.168.0.100:8000/api}
        WS_URL: ${WS_URL}
        FRONTEND_URL: ${FRONTEND_URL-http://192.168.0.100}
    ports:
      - ${FRONTEND_PORT-80}:${FRONTEND_PORT-80}
    depends_on:
      - api
      - websocket
